apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-lgtm
  namespace: observability
  labels:
    app: otel-lgtm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-lgtm
  template:
    metadata:
      labels:
        app: otel-lgtm
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: role
                    operator: In
                    values:
                      - worker
            - weight: 50
              preference:
                matchExpressions:
                  - key: role
                    operator: In
                    values:
                      - master
      containers:
        - name: otel-lgtm
          image: grafana/otel-lgtm:latest
          env:
            - name: ENABLE_LOGS_OTELCOL
              value: "1"
            - name: LGTM_APP_CONFIG_FILE
              value: /etc/lgtm/lgtm-config.yaml
            - name: COLLECTOR_CONFIG_FILE
              value: /etc/otel-collector/embedded-collector.yaml
          ports:
            - containerPort: 3000
            - containerPort: 3100
            - containerPort: 4317
            - containerPort: 4318
            - containerPort: 14268
          volumeMounts:
            - name: lgtm-config
              mountPath: /etc/lgtm
              readOnly: true

            - name: collector-config-volume
              mountPath: /etc/otel-collector
              readOnly: true
      volumes:
        - name: lgtm-config
          configMap:
            name: otel-lgtm-config

        - name: collector-config-volume
          configMap:
            name: otel-lgtm-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-lgtm
  namespace: observability
spec:
  selector:
    app: otel-lgtm
  ports:
    - name: grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: otel-grpc
      protocol: TCP
      port: 4317
      targetPort: 4317
    - name: otel-http
      protocol: TCP
      port: 4318
      targetPort: 4318
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel-lgtm-ingress
  namespace: observability
spec:
  ingressClassName: nginx
  rules:
    - host: grafana.homelab
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: otel-lgtm
                port:
                  number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel-lgtm-tailscale
  namespace: observability
spec:
  ingressClassName: tailscale
  defaultBackend:
    service:
      name: otel-lgtm
      port:
        number: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-lgtm-config
  namespace: observability
data:
  lgtm-config.yaml: |
    server:
      http_listen_port: 3000
    analytics:
      reporting_enabled: false
    common:
      path_prefix: /var/lgtm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-lgtm-collector-config
  namespace: observability
data:
  embedded-collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus:
        config:
          scrape_configs:
            - job_name: "kube-state-metrics"
              static_configs:
                - targets:
                    - kube-state-metrics.observability.svc.cluster.local:8080
    processors:
      batch:
    exporters:
      mimir:
        endpoint: "http://127.0.0.1:9009/api/v1/push"
      logging:
    service:
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch]
          exporters: [mimir, logging]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [logging]
