---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: "NotIn"
                    values:
                      - "k3s"
                      - "portunus"
      volumes:
        - name: nfs-jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-pvc-config
        - name: nfs-jellyfin-data
          persistentVolumeClaim:
            claimName: jellyfin-pvc-data
        - name: cache
          emptyDir:
            medium: Memory
            sizeLimit: 4Gi
      # The settings below have been marked out and can be used when removing the "#"
      # - name: device-vcsm # Only needed if you want to use your Raspberry Pi MMAL video decoding (Enabled as OpenMax H264 decode in gui settings).
      #   hostPath:
      #     path: /dev/vcsm
      # - name: device-vchiq  #Only needed if you want to use your Raspberry Pi OpenMax video encoding.
      #   hostPath:
      #    path: /dev/vchiq
      # - name: device-video10  #Only needed if you want to use your Raspberry Pi V4L2 video encoding.
      #   hostPath:
      #     path: /dev/video10
      # - name: device-video11  #Only needed if you want to use your Raspberry Pi V4L2 video encoding.
      #   hostPath:
      #     path: /dev/video11
      # - name: device-video12  #Only needed if you want to use your Raspberry Pi V4L2 video encoding.
      #   hostPath:
      #      path: /dev/video12
      containers:
        - env:
            - name: TZ
              value: Europe/Berlin
          securityContext:
            privileged: true # Container must run as privileged inside of the pod, required for hardware acceleration
          image: jellyfin/jellyfin:10.10.6 # Note: this image in particular has the OpenCL runtime
          imagePullPolicy: Always
          name: jellyfin
          ports:
            - containerPort: 8096
              name: http-tcp
              protocol: TCP
            - containerPort: 8920
              name: https-tcp
              protocol: TCP
            - containerPort: 1900
              name: dlna-udp
              protocol: UDP
            - containerPort: 7359
              name: discovery-udp
              protocol: UDP
          resources:
            requests:
              cpu: "250m"
              memory: "1Gi"
            limits:
              cpu: "3"
              memory: "10Gi"
              # amd.com/gpu: 1
              # gpu.intel.com/i915: 1
              # gpu.intel.com/xe: 1
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /config
              name: nfs-jellyfin-config
            - mountPath: /data
              name: nfs-jellyfin-data
            - name: cache
              mountPath: /cache
          # Below are the path to mount devices for hardware acceleration
          # The settings below have been marked out and can be used when removing the "#"
          # - mountPath: /dev/vcsm
          #   name: device-vcsm
          # - mountPath: /dev/vchiq
          #   name: device-vchiq
          # - mountPath: /dev/video10
          #   name: device-video10
          # - mountPath: /dev/video11
          #   name: device-video11
          # - mountPath: /dev/video12
          #   name: device-video12
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      port: 8096
      targetPort: 8096
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  ingressClassName: nginx
  rules:
    - host: jellyfin.homelab
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  number: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-tailscale
  namespace: jellyfin
spec:
  defaultBackend:
    service:
      name: jellyfin
      port:
        number: 8096
  ingressClassName: tailscale
  tls:
    - hosts:
        - jellyfin
